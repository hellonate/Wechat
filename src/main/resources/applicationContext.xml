<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:elasticsearch="http://www.springframework.org/schema/data/elasticsearch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/data/elasticsearch http://www.springframework.org/schema/data/elasticsearch/spring-elasticsearch-1.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
				         
  <!-- 约束文件
	引入注解
	引入jdbc.properties
	dataSource
	sqlSessionFactory
	事务管理器
	管理策略
	aop
		切入点  bean(*Service)
		tx 

    --> 
		<!-- 1.引入注解 -->
		<context:annotation-config></context:annotation-config>		         
		<context:component-scan base-package="com.cmcc"></context:component-scan>
		<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
		
		<!-- 2.引入jdbc.properties 和 es.properties-->
		<context:property-placeholder location="classpath:jdbc.properties"/>
				
	    <context:property-placeholder location="classpath:es.properties"/>
		
		<!-- 3.配置dataSource -->
		<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="${jdbc.driverclass}"/>
			<property name="url" value="${jdbc.url}"/>
			<property name="username" value="${jdbc.username}"/>
			<property name="password" value="${jdbc.password}"/>
		</bean>
		
		<!-- 4.配置SqlSessionFactory -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- 4.1dataSource -->
			<property name="dataSource" ref="dataSource"></property>
			<!-- 4.2引入myBatis的核心配置文件 -->
			<property name="configLocation" value="classpath:sqlMapperConfig.xml"></property>
			<!-- 4.3扫描所有的mapper.xml文件 -->
			<property name="mapperLocations" value="classpath:com/cmcc/mapper/*.xml"></property>
		</bean>
		
		<!-- 5.配置事务 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"></property>
		 </bean>
		 
		 <!-- 6.事务管理策略 -->
		<tx:advice id="tx" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="*"/>
			</tx:attributes>
		</tx:advice>
		
		<!-- 7 aop -->
		<aop:config>
			<aop:pointcut expression="bean(*Service)" id="p"/>
			<aop:advisor advice-ref="tx" pointcut-ref="p"/>
		</aop:config>
		
			<!-- 配置redis连接池对象 -->
		<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
			<!-- 最大空闲数 -->
			<property name="maxIdle" value="50"></property>
			<!-- 最大连接数 -->
			<property name="maxTotal" value="100"></property>
			<!-- 最大等待时间 -->
			<property name="maxWaitMillis" value="20000"></property>
		</bean>
		                                         
		
				<!-- 配置redis连接工厂 -->
		<bean id="jedisConnectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
			<!-- 连接池配置 -->
			<property name="poolConfig" ref="jedisPoolConfig"></property>
			<!-- 连接主机 -->
			<property name="hostName" value="192.168.248.130"></property>
			<!-- 端口 -->
			<property name="port" value="6379"></property>
			<!-- 密码 -->
			<!-- <property name="password" value="u#1d8Dci"></property> -->
		</bean>
		
		<bean id="redisTemplate"  class="org.springframework.data.redis.core.RedisTemplate">
			<!-- 配置连接工厂 -->
			<property name="connectionFactory" ref="jedisConnectionFactory"></property>
			<!-- 修改键的序列化器 -->
			<property name="keySerializer" ref="stringRedisSerializer"></property>
			<!--  修改值的序列化器  -->
			<property name="valueSerializer" ref="jackson2JsonRedisSerializer"></property>
			
		
		</bean>
				<!-- 
		配置序列化的方式   搜索*RedisSerializer  有很多种序列化的方式
		 -->
		<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		
		<bean id="jackson2JsonRedisSerializer" class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"></bean>
	  <elasticsearch:transport-client   id="client" 
	    cluster-name="elasticsearch"
	  	cluster-nodes="192.168.248.130:9300"/>				
					
	   <bean name="elasticsearchTemplate" class="org.springframework.data.elasticsearch.core.ElasticsearchTemplate">
		<constructor-arg name="client" ref="client" />
	   </bean>
	  
	 
			
			
			
										
		<!--引入mapper代理  -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.cmcc.mapper"></property>
		
		</bean>
		
		
</beans>